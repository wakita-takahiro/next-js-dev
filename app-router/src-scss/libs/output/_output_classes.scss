// Common class<br>
//
// setting.scss + mixin.scss に依存します
//
// Styleguide 3.0.0

///**
//  common setup
//* ************************************************ */

@use "sass:math";
@use "../../setting";

// ------------------------------------------
// body background-color + color + font-family
// 3.0.1
// ------------------------------------------
@if setting.$out-body-style {
  body {
    background-color: setting.$bg-color;
    color: setting.$font-color;
    font-family: setting.$font-family;
  }
}

// ------------------------------------------
// body font-size
// 3.0.2
// ------------------------------------------
@if setting.$out-font-size {
  html {
    font-size: 62.5%;
  }

  body {
    // font-size: (strip-unit(setting.$font-size) / 10) + rem;
    font-size: #{math.div(setting.$font-size, 10)}rem;
  }
}
// ------------------------------------------
// body * line-height by $line-height
// ------------------------------------------
@if setting.$out-body-line-height {
  // Default line-height based on font-size rather than "computed-value"
  // see: http://www.w3.org/TR/CSS21/visudet.html#line-height
  body * {
    line-height: setting.$line-height;
  }
}

// ------------------------------------------
// * $font-smoothing by $font-smoothing
// ------------------------------------------
@if setting.$out-font-smoothing {
  * {
    @if setting.$font-smoothing == on {
      -moz-font-feature-settings: "liga", "kern";
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      text-rendering: optimizeLegibility;
    } @else {
      -moz-osx-font-smoothing: auto;
      -webkit-font-smoothing: subpixel-antialiased;
    }
  }
}
// ------------------------------------------
// font-size 汎用class
// ------------------------------------------
// sass-lint:disable empty-line-between-blocks, no-important
@if setting.$out-common-font-classes {
  // Individual font module
  @for $i from 10 through 40 {
    .f#{$i} {
      font-size: #{math.div($i, 10)}rem !important;
    }
  }
}
// sass-lint:enable empty-line-between-blocks, no-important

// 1. float reset
// -------------------------------------------------------------
@if setting.$out-clearfix {
  .clr {
    border: 0;
    clear: both;
    content: " ";
    font-size: 0;
    height: 1px;
    line-height: 0;
    margin: 0 -1px -1px 0;
    overflow: hidden;
    padding: 0;
    width: 1px;
  }
}

// 2. float, left / right
// -------------------------------------------------------------
@if setting.$out-float {
  .f-left {
    float: left;
  }

  .f-right {
    float: right;
  }
}
/* stylelint-disable no-descending-specificity */
// no-descending-specificity - 「詳細度が低い順に書く」を無効にします
// 3. align for table, td, th
// -------------------------------------------------------------
@if setting.$out-table {
  // sass-lint:disable empty-line-between-blocks, no-important, force-element-nesting, no-qualifying-elements
  .t-left {
    text-align: left !important;
  }

  .t-center {
    text-align: center !important;
  }

  .t-right {
    text-align: right !important;
  }

  .v-top {
    vertical-align: top !important;
  }

  .v-middle {
    vertical-align: middle !important;
  }

  .v-bottom {
    vertical-align: bottom !important;
  }

  tr.t-left,
  table.t-left,
  thead.t-left tr,
  tbody.t-left tr {
    th,
    td {
      text-align: left !important;

      &.t-left {
        text-align: left !important;
      }

      &.t-center {
        text-align: center !important;
      }

      &.t-right {
        text-align: right !important;
      }
    }
  }

  tr.t-center,
  table.t-center,
  thead.t-center tr,
  tbody.t-center tr {
    th,
    td {
      text-align: center !important;

      &.t-left {
        text-align: left !important;
      }

      &.t-center {
        text-align: center !important;
      }

      &.t-right {
        text-align: right !important;
      }
    }
  }

  table.t-right,
  thead.t-right tr,
  tbody.t-right tr,
  tr.t-right {
    th,
    td {
      text-align: right !important;

      &.t-left {
        text-align: left !important;
      }

      &.t-center {
        text-align: center !important;
      }

      &.t-right {
        text-align: right !important;
      }
    }
  }

  table.v-top,
  thead.v-top tr,
  tbody.v-top tr,
  tr.v-top {
    th,
    td {
      vertical-align: top !important;

      &.v-top {
        vertical-align: top !important;
      }

      &.v-middle {
        vertical-align: middle !important;
      }

      &.v-bottom {
        vertical-align: bottom !important;
      }
    }
  }

  table.v-middle,
  thead.v-middle tr,
  tbody.v-middle tr,
  tr.v-middle {
    th,
    td {
      vertical-align: middle !important;

      &.v-top {
        vertical-align: top !important;
      }

      &.v-middle {
        vertical-align: middle !important;
      }

      &.v-bottom {
        vertical-align: bottom !important;
      }
    }
  }

  table.v-bottom,
  thead.v-bottom tr,
  tbody.v-bottom tr,
  tr.v-bottom {
    th,
    td {
      vertical-align: bottom !important;

      &.v-top {
        vertical-align: top !important;
      }

      &.v-middle {
        vertical-align: middle !important;
      }

      &.v-bottom {
        vertical-align: bottom !important;
      }
    }
  }
  // sass-lint:enable empty-line-between-blocks, no-important
}

// 4. space
// -------------------------------------------------------------
@if setting.$out-gap {
  // styleguide:ignore:start
  $space-value: 100;

  @include prc-each("mt", "mb", "pt", "pb") {
    $tmp: null;
    $properties: null;

    @for $i from 0 through $space-value {
      @if $i < 10 {
        $tmp: "0#{$i}";
      } @else {
        $tmp: $i;
      }

      @if $arg == "mt" {
        $properties: "margin-top";
      } @else if $arg == "mb" {
        $properties: "margin-bottom";
      } @else if $arg == "pt" {
        $properties: "padding-top";
      } @else if $arg == "pb" {
        $properties: "padding-bottom";
      }

      .#{$arg}#{$tmp} {
        // sass-lint:disable no-important
        #{$properties}: $i * 1px !important;
        // sass-lint:enable no-important
      }
    }
  }
  // styleguide:ignore:end
}

// 5. table cell width
// -------------------------------------------------------------
@if setting.$out-table {
  // styleguide:ignore:start
  @include prc-each(
    auto,
    10,
    15,
    20,
    25,
    30,
    35,
    40,
    45,
    50,
    55,
    60,
    65,
    70,
    75,
    80,
    85,
    90,
    95,
    100,
    105,
    110,
    115,
    120,
    125,
    130,
    135,
    140,
    145,
    150,
    155,
    160,
    165,
    170,
    175,
    180,
    185,
    190,
    195,
    200
  ) {
    table {
      // sass-lint:disable empty-line-between-blocks, no-important
      th,
      td {
        @if $arg == auto {
          &.w-#{$arg} {
            width: auto !important;
          }
        } @else {
          &.w#{$arg} {
            width: #{$arg}px !important;
          }
        }
      }
      // sass-lint:enable empty-line-between-blocks, no-important

      @if $arg == auto {
        &.w-#{$arg} > tr,
        &.w-#{$arg} > thead > tr,
        &.w-#{$arg} > tbody > tr,
        thead.w-#{$arg} > tr,
        tbody.w-#{$arg} > tr,
        tr.w-#{$arg} {
          > th,
          > td {
            width: auto;
          }
        }
      } @else {
        &.w#{$arg} > tr,
        &.w#{$arg} > thead > tr,
        &.w#{$arg} > tbody > tr,
        thead.w#{$arg} > tr,
        tbody.w#{$arg} > tr,
        tr.w#{$arg} {
          > th,
          > td {
            width: #{$arg}px;
          }
        }
      } // if
    } // table
  }
  // styleguide:ignore:end
}

// 6. text style
// -------------------------------------------------------------
@if setting.$out-text-style {
  .bold {
    font-weight: bold;
  }

  .italic {
    font-style: italic;
  }

  .nowrap {
    white-space: nowrap;
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

// 7. show hide
// -------------------------------------------------------------
// sass-lint:disable no-important
@if setting.$out-show-hide {
  .show {
    display: block !important;
  }

  .hide {
    display: none !important;
  }

  .visible {
    max-height: 99999px;

    opacity: 1;
    overflow: visible;
    visibility: visible;
  }

  .hidden {
    max-height: 0;

    opacity: 0;
    overflow: hidden;
    visibility: hidden;
  }
}
// sass-lint:enable no-important
