// reset
//
// parachute.bz<br>
// Distributed under the terms of the MIT license.<br>
// http://www.opensource.org/licenses/mit-license.html
//
// Styleguide 1.5.0

// last update 2023.10.05
// 下記を参照しつつ以前のリセットになるべく近くなるよう設定
// https://github.com/elad2412/the-new-css-reset
// https://github.com/mayank99/reset.css

@use "../../setting";

//-----------------------------------------------------
//  reset
//-----------------------------------------------------

@if setting.$out-reset {
  /*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
  */
  *:where(
      :not(html, iframe, canvas, img, svg, video, audio, input, button, textarea, select):not(
          svg *,
          symbol *
        )
    ) {
    all: unset;
    display: revert;
  }

  // property reset
  * {
    box-sizing: border-box;

    &::before,
    &::after {
      box-sizing: border-box;
    }
  }

  :where(html) {
    -webkit-text-size-adjust: none;
    -webkit-tap-highlight-color: transparent;
  }

  /* Set core root defaults */
  @media (prefers-reduced-motion: no-preference) {
    :where(html:focus-within) {
      scroll-behavior: smooth;
    }
  }

  /* Set core body defaults */
  :where(body) {
    margin: 0;
    min-height: 100vh;
    text-rendering: optimizeSpeed;
  }

  :where(a) {
    color: inherit;
    text-decoration: underline;
    text-underline-offset: 0.2ex;
    cursor: pointer;
  }

  :where(ul, ol, menu) {
    list-style: none;
  }

  :where(img, svg, video, canvas, audio, iframe, embed, object, main) {
    display: block;
  }

  :where(img) {
    max-inline-size: 100%;
    max-block-size: 100%;
    vertical-align: bottom;
  }

  :where(img, picture, svg, video) {
    max-inline-size: 100%;
    block-size: auto;
  }

  :where(p, h1, h2, h3, h4, h5, h6) {
    overflow-wrap: break-word;
  }

  :where(table) {
    border-collapse: collapse;
  }

  :where(input, button, textarea, select, textarea) {
    color: inherit;
    font: inherit;
  }

  /* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
  :where(input, textarea) {
    -webkit-user-select: auto;
    user-select: auto;
  }

  /* revert the 'white-space' property for textarea elements on Safari */
  :where(textarea) {
    white-space: revert;
  }

  /* minimum style to allow to style meter element */
  :where(meter) {
    -webkit-appearance: revert;
    appearance: revert;
  }

  /* preformatted text - use only for this feature */
  :where(pre) {
    all: revert;
    box-sizing: border-box;
  }

  /* reset default text opacity of input placeholder */
  ::placeholder {
    color: unset;
  }

  /* remove default dot (•) sign */
  ::marker {
    content: initial;
  }

  /* fix the feature of 'hidden' attribute.
  display:revert; revert to element instead of attribute */
  :where([hidden]) {
    display: none;
  }

  /* revert for bug in Chromium browsers
  - fix for the content editable attribute will work properly.
  - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
  :where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    line-break: after-white-space;
    -webkit-user-select: auto;
    user-select: auto;
  }

  /* apply back the draggable feature - exist only in Chromium and Safari */
  :where([draggable="true"]) {
    -webkit-user-drag: element;
  }

  :where(hr) {
    border: none;
    border-block-start: 1px solid;
    color: inherit;
    block-size: 0;
    overflow: visible;
  }

  /* Revert Modal native behavior */
  :where(dialog:modal) {
    all: revert;
    box-sizing: border-box;
  }

  :where(button, label, select, summary, [role="button"], [role="option"]) {
    cursor: pointer;
  }

  :where(:disabled) {
    cursor: not-allowed;
  }

  :where(label:has(> input:disabled), label:has(+ input:disabled)) {
    cursor: not-allowed;
  }

  /* Remove all animations and transitions for people that prefer not to see them */
  @media (prefers-reduced-motion: reduce) {
    :where(html:focus-within) {
      scroll-behavior: auto;
    }

    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;

      &::before,
      &::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
      }
    }
  }
}
